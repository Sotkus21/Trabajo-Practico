<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>